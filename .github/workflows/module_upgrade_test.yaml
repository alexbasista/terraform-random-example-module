# .github/workflows/terraform-upgrade-test.yml
name: Terraform Module Upgrade Test

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.yml'
      - 'tests/**'
      - 'examples/**'
  # push:
  #   branches:
  #     - main

jobs:
  upgrade-test:
    name: Upgrade Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history and tags

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
      
      - name: Get latest tag
        id: latest_tag
        run: |
          git fetch --tags
          echo "tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"
      
      - name: Print latest tag
        run: echo "Latest tag is ${{ steps.latest_tag.outputs.tag }}"

      - name: Use latest released module version
        run: |
          sed -i 's|__MODULE_SOURCE__|git::https://github.com/${{ github.repository }}.git//.?ref=${{ steps.latest_tag.outputs.tag }}|' tests/default/main.tf

      - name: Terraform Init + Apply (latest release)
        run: |
          terraform -chdir=tests/default init -input=false
          terraform -chdir=tests/default apply -auto-approve

      - name: Switch to local module source (upgrade test)
        run: |
          sed -i 's|source = .*|source = "../.."|' tests/default/main.tf

      - name: Terraform Init + Plan (upgrade test)
        run: |
          terraform -chdir=tests/default init -upgrade -input=false
          terraform -chdir=tests/default plan -detailed-exitcode -input=false

      - name: Terraform Destroy
        if: always()
        run: |
          terraform -chdir=tests/default destroy -auto-approve || true